{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LibraryService {\n  constructor() {\n    this.booksTakenCountSource = new BehaviorSubject(0);\n    this.booksTakenCount$ = this.booksTakenCountSource.asObservable();\n    this.booksReturnedCountSource = new BehaviorSubject(0);\n    this.booksReturnedCount$ = this.booksReturnedCountSource.asObservable();\n    this.availableBooksCountSource = new BehaviorSubject(0);\n    this.availableBooksCount$ = this.availableBooksCountSource.asObservable();\n  }\n  updateBooksTakenCount(count) {\n    this.booksTakenCountSource.next(count);\n  }\n  updateBooksReturnedCount(count) {\n    this.booksReturnedCountSource.next(count);\n  }\n  updateAvailableBooksCount(count) {\n    this.availableBooksCountSource.next(count);\n  }\n  static #_ = this.ɵfac = function LibraryService_Factory(t) {\n    return new (t || LibraryService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryService,\n    factory: LibraryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","LibraryService","constructor","booksTakenCountSource","booksTakenCount$","asObservable","booksReturnedCountSource","booksReturnedCount$","availableBooksCountSource","availableBooksCount$","updateBooksTakenCount","count","next","updateBooksReturnedCount","updateAvailableBooksCount","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\library\\library-app\\src\\app\\library.service.ts"],"sourcesContent":["// library.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LibraryService {\n  public booksTakenCountSource = new BehaviorSubject<number>(0);\n  booksTakenCount$ = this.booksTakenCountSource.asObservable();\n\n  public booksReturnedCountSource = new BehaviorSubject<number>(0);\n  booksReturnedCount$ = this.booksReturnedCountSource.asObservable();\n\n  public availableBooksCountSource = new BehaviorSubject<number>(0);\n  availableBooksCount$ = this.availableBooksCountSource.asObservable();\n\n  updateBooksTakenCount(count: number) {\n    this.booksTakenCountSource.next(count);\n  }\n\n  updateBooksReturnedCount(count: number) {\n    this.booksReturnedCountSource.next(count);\n  }\n\n  updateAvailableBooksCount(count: number) {\n    this.availableBooksCountSource.next(count);\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAIS,KAAAC,qBAAqB,GAAG,IAAIH,eAAe,CAAS,CAAC,CAAC;IAC7D,KAAAI,gBAAgB,GAAG,IAAI,CAACD,qBAAqB,CAACE,YAAY,EAAE;IAErD,KAAAC,wBAAwB,GAAG,IAAIN,eAAe,CAAS,CAAC,CAAC;IAChE,KAAAO,mBAAmB,GAAG,IAAI,CAACD,wBAAwB,CAACD,YAAY,EAAE;IAE3D,KAAAG,yBAAyB,GAAG,IAAIR,eAAe,CAAS,CAAC,CAAC;IACjE,KAAAS,oBAAoB,GAAG,IAAI,CAACD,yBAAyB,CAACH,YAAY,EAAE;;EAEpEK,qBAAqBA,CAACC,KAAa;IACjC,IAAI,CAACR,qBAAqB,CAACS,IAAI,CAACD,KAAK,CAAC;EACxC;EAEAE,wBAAwBA,CAACF,KAAa;IACpC,IAAI,CAACL,wBAAwB,CAACM,IAAI,CAACD,KAAK,CAAC;EAC3C;EAEAG,yBAAyBA,CAACH,KAAa;IACrC,IAAI,CAACH,yBAAyB,CAACI,IAAI,CAACD,KAAK,CAAC;EAC5C;EAAC,QAAAI,CAAA,G;qBApBUd,cAAc;EAAA;EAAA,QAAAe,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}