{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../library.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TakeComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const book_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", book_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(book_r1);\n  }\n}\nexport class TakeComponent {\n  constructor(libraryService) {\n    this.libraryService = libraryService;\n    this.selectedBook = '';\n    this.availableBooks = ['Book 1', 'Book 2', 'Book 3', 'Book 4']; // Example available books\n  }\n\n  takeBook() {\n    // Implement logic to save the book status as taken\n    console.log(`Book ${this.selectedBook} taken`);\n    // Add your logic to update book status or perform API calls\n    // Update the count in the service\n    this.libraryService.updateBooksTakenCount(this.libraryService.booksTakenCountSource.value + 1);\n    this.libraryService.updateAvailableBooksCount(this.libraryService.availableBooksCountSource.value - 1);\n  }\n  static #_ = this.ɵfac = function TakeComponent_Factory(t) {\n    return new (t || TakeComponent)(i0.ɵɵdirectiveInject(i1.LibraryService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TakeComponent,\n    selectors: [[\"app-take\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"]],\n    template: function TakeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Take a Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4, \"Select Book:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TakeComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selectedBook = $event;\n        });\n        i0.ɵɵtemplate(6, TakeComponent_option_6_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TakeComponent_Template_button_click_8_listener() {\n          return ctx.takeBook();\n        });\n        i0.ɵɵtext(9, \"Take Book\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedBook);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableBooks);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n\\ndiv[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    max-width: 600px;\\n    margin: 50px auto;\\n    padding: 30px;\\n    background-color: #e67e22;\\n    border-radius: 10px;\\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\\n    color: #ecf0f1;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n    font-size: 30px;\\n    margin-bottom: 20px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 15px;\\n}\\n\\nselect[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\\n    padding: 15px;\\n    margin: 15px 0;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    background-color: #d35400;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    transition: background-color 0.3s ease;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: #a04000;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFrZS90YWtlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCO0FBQ3ZCO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsdUNBQXVDO0lBQ3ZDLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSxhQUFhO0lBQ2IsY0FBYztBQUNsQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2Ysc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiLyogdGFrZS5jb21wb25lbnQuY3NzICovXHJcbmRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDMwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTY3ZTIyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIGNvbG9yOiAjZWNmMGYxO1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG5zZWxlY3QsXHJcbmJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDM1NDAwO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhMDQwMDA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","book_r1","ɵɵadvance","ɵɵtextInterpolate","TakeComponent","constructor","libraryService","selectedBook","availableBooks","takeBook","console","log","updateBooksTakenCount","booksTakenCountSource","value","updateAvailableBooksCount","availableBooksCountSource","_","ɵɵdirectiveInject","i1","LibraryService","_2","selectors","decls","vars","consts","template","TakeComponent_Template","rf","ctx","ɵɵlistener","TakeComponent_Template_select_ngModelChange_5_listener","$event","ɵɵtemplate","TakeComponent_option_6_Template","ɵɵelement","TakeComponent_Template_button_click_8_listener"],"sources":["E:\\library\\library-app\\src\\app\\take\\take.component.ts","E:\\library\\library-app\\src\\app\\take\\take.component.html"],"sourcesContent":["// take.component.ts\nimport { Component } from '@angular/core';\nimport { LibraryService } from '../library.service';\n\n@Component({\n  selector: 'app-take',\n  templateUrl: './take.component.html',\n  styleUrls: ['./take.component.css'],\n})\nexport class TakeComponent {\n  selectedBook: string = '';\n  availableBooks: string[] = ['Book 1', 'Book 2', 'Book 3', 'Book 4']; // Example available books\n\n  constructor(private libraryService: LibraryService) { }\n\n  takeBook() {\n    // Implement logic to save the book status as taken\n    console.log(`Book ${this.selectedBook} taken`);\n    // Add your logic to update book status or perform API calls\n\n    // Update the count in the service\n    this.libraryService.updateBooksTakenCount(this.libraryService.booksTakenCountSource.value + 1);\n    this.libraryService.updateAvailableBooksCount(this.libraryService.availableBooksCountSource.value - 1);\n  }\n}\n","<!-- take.component.html -->\n<div>\n    <h2>Take a Book</h2>\n    <label>Select Book:</label>\n    <select [(ngModel)]=\"selectedBook\">\n        <option *ngFor=\"let book of availableBooks\" [value]=\"book\">{{ book }}</option>\n    </select>\n    <br>\n    <button (click)=\"takeBook()\">Take Book</button>\n</div>"],"mappings":";;;;;;ICKQA,EAAA,CAAAC,cAAA,gBAA2D;IAAAD,EAAA,CAAAE,MAAA,GAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAlCH,EAAA,CAAAI,UAAA,UAAAC,OAAA,CAAc;IAACL,EAAA,CAAAM,SAAA,GAAU;IAAVN,EAAA,CAAAO,iBAAA,CAAAF,OAAA,CAAU;;;ADI7E,OAAM,MAAOG,aAAa;EAIxBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,cAAc,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;EAEf;;EAEtDC,QAAQA,CAAA;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,IAAI,CAACJ,YAAY,QAAQ,CAAC;IAC9C;IAEA;IACA,IAAI,CAACD,cAAc,CAACM,qBAAqB,CAAC,IAAI,CAACN,cAAc,CAACO,qBAAqB,CAACC,KAAK,GAAG,CAAC,CAAC;IAC9F,IAAI,CAACR,cAAc,CAACS,yBAAyB,CAAC,IAAI,CAACT,cAAc,CAACU,yBAAyB,CAACF,KAAK,GAAG,CAAC,CAAC;EACxG;EAAC,QAAAG,CAAA,G;qBAdUb,aAAa,EAAAR,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbjB,aAAa;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BhC,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACpBH,EAAA,CAAAC,cAAA,YAAO;QAAAD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3BH,EAAA,CAAAC,cAAA,gBAAmC;QAA3BD,EAAA,CAAAkC,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAH,GAAA,CAAAtB,YAAA,GAAAyB,MAAA;QAAA,EAA0B;QAC9BpC,EAAA,CAAAqC,UAAA,IAAAC,+BAAA,oBAA8E;QAClFtC,EAAA,CAAAG,YAAA,EAAS;QACTH,EAAA,CAAAuC,SAAA,SAAI;QACJvC,EAAA,CAAAC,cAAA,gBAA6B;QAArBD,EAAA,CAAAkC,UAAA,mBAAAM,+CAAA;UAAA,OAASP,GAAA,CAAApB,QAAA,EAAU;QAAA,EAAC;QAACb,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAJvCH,EAAA,CAAAM,SAAA,GAA0B;QAA1BN,EAAA,CAAAI,UAAA,YAAA6B,GAAA,CAAAtB,YAAA,CAA0B;QACLX,EAAA,CAAAM,SAAA,GAAiB;QAAjBN,EAAA,CAAAI,UAAA,YAAA6B,GAAA,CAAArB,cAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}